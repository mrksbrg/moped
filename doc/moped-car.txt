

The car has three Raspberry Pi 1 (called rpi below) boards, model B revision 2,
called TCU, SCU and VCU.

TCU = telemetric control unit
SCU = sensor
VCU = vehicle

Sometimes I use "ECU" to refer to either of SCU and VCU.

VCU is connected to the steering and driving (both actuators and
sensors), as well as the LEDs. The speed sensors are at the inside of the
right wheels (but one of the sensor inputs is not used and is connected to
the steering angle instead).

SCU has some other sensors.

When looking down at the car in its forward direction, the SCU is at
the front, the TCU at the left and the VCU at the right.


TCU runs Linux and handles all communication with the outside world.
It has an ethernet socket and two USB sockets, of which one should have
a wifi dongle (and the other may be connected to a keyboard). It has
a video socket, for connecting a screen. (So do the others, but there
these sockets are not used.)

SCU and VCU are very similar. They run autosar, but are not meant to run
exactly the same MOPED RTS code - the last building step is different.

The three boards communicate with a CAN bus, which is implemented by
what's sitting on the extra little board connected to the main rpi boards.

All three boards have a list of 2x13 pins, described here (revision 2):
http://www.megaleecher.net/Raspberry_Pi_GPIO_Pinout_Helper

At the front of the car is an ultra sound sensor.
Behind it are three LEDs: two yellow ones, and between them a red one.

Under the TCU, next to the battery, sits an ADC (analog to digital)
converter. In the current configuration, it is taking input from the
power supply, for measuring the voltage level.

In front of the ADC, there is an accelerator/gyro measuring unit.

The two cars we have here, I call simply car1 and car2. They have these
numbers on their rpi's:

car1:
TCU	12
VCU	 2
SCU	11

car2:
TCU	 8
VCU	 5
SCU	10

The numbers actually are drawn on the CAN bus boards, so if those are
replaced, the numbers change.


On one of the cars (car1), there is a camera, pointing upwards, sitting in
front of the TCU.

Output (written by VM.println or printf) from SCU and VCU can be seen
by connecting a serial cable to the UART pins. I used one with USB and
plugged it into the computer, where I ran GtkTerm. Use the Log function
of GtkTerm. The configuration should be 115200-8-N-1. The device is
probably called /dev/ttyUSB0.
If the cable is disconnected (for example if the car is to be run on its
own, or if you want to connect to the other one of VCU and SCU), you need
to setup the configuration again.


On each rpi are some small lights that indicate what the rpi is doing.
The second one is usually lit when the power is on. The first one blinks
slowly (once a second) on VCU and SCU to show that autosar is running.
If it doesn't start to blink when the board is turned on, turn off and on
again.

On the TCU, the serial and network traffic is shown. I think there is
no corresponding heartbeat function.


There are lights for indicating the power level, see moped-battery.txt.

The cars behave slightly differently at low motor speed: one of them
either runs smoothly or not at all at the lowest speed, and the other
jerks a little.



The colours below may be conventional or not; they are the colours used
in the current wiring on these cars.


* Serial data
rpi pin 6 is connected to black on an USB cable
8 to yellow
10 to one more (orange, it seems)

http://www.ftdichip.com/Support/Documents/DataSheets/Cables/DS_TTL-232R_RPi.pdf

It seems it still works if the connections to rpi pins 6 and 10 change
places, because I did that accidentally, but what this means
electrically, I don't know.

There are serial-USB cables which have four pins out. The colours seem
to be black, red, white, and one more. Don't use the red one. The
order is then: black, white, one more.

* Ultrasonic reader
HCSR-04

It has four pins, although it may sit mounted on a 6- or 8-pin holder (if it
does, it should sit in the middle).
Its pins are named Vcc, Trig, Echo, Gnd.

A resistor is added in series to Echo, to reduce the voltage from it
from 5V to 3.3V.

Google "hc sr04 raspberry pi" - there seem to be several solutions.

rpi pin 17 (5V) is connected (blue) to Vcc
15 (GPIO22) to Trig (green)
13 (GPIO27) to Echo (white)
25 (ground) to Gnd (black)

There are several 5V and ground pins that can be used.

* I2C
MPU9150

The accelerometer, also containing a magnetometer. There is no code
yet for handling the magnetometer.

rpi pins 1, 3, 5 and 9 (ground) are used.


* ADC
Mcp3008

driven by 3V: rpi pins 17 and 20
digital signal: rpi pins 12, 16, 18 and 24.

